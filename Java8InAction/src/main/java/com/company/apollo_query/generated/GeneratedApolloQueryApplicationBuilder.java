package com.company.apollo_query.generated;

import com.company.apollo_query.ApolloQueryApplication;
import com.company.apollo_query.ApolloQueryApplicationBuilder;
import com.company.apollo_query.ApolloQueryApplicationImpl;
import com.company.apollo_query.apollo_query.apollo_query.tb_shipping_order_main.TbShippingOrderMainManagerImpl;
import com.company.apollo_query.apollo_query.apollo_query.tb_shipping_order_main.TbShippingOrderMainSqlAdapter;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.core.internal.AbstractApplicationBuilder;
import javax.annotation.Generated;

/**
 * A generated base {@link
 * com.speedment.runtime.core.internal.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named apollo_query.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedApolloQueryApplicationBuilder extends AbstractApplicationBuilder<ApolloQueryApplication, ApolloQueryApplicationBuilder> {
    
    protected GeneratedApolloQueryApplicationBuilder() {
        super(ApolloQueryApplicationImpl.class, GeneratedApolloQueryMetadata.class);
        withManager(TbShippingOrderMainManagerImpl.class);
        withComponent(TbShippingOrderMainSqlAdapter.class);
    }
    
    @Override
    public ApolloQueryApplication build(Injector injector) {
        return injector.getOrThrow(ApolloQueryApplication.class);
    }
}